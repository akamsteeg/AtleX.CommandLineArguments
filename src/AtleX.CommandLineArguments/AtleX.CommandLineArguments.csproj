<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
    <LangVersion>7.2</LangVersion>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <DocumentationFile>docs\AtleX.CommandLineArguments.xml</DocumentationFile>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    
    <PackageProjectUrl>https://github.com/akamsteeg/AtleX.CommandLineArguments</PackageProjectUrl>
    <Description>AtleX.CommandLineArguments is a helper library to facilitate parsing command line arguments into a strongly-typed object. Values can be validated with extensible and customisable validators and the library can automatically generate help for the user.</Description>
    
    <Copyright>© Alex Kamsteeg</Copyright>
    <Authors>Alex Kamsteeg (https://atlex.nl/)</Authors>
    <Company />
    <PackageLicenseUrl>https://github.com/akamsteeg/AtleX.CommandLineArguments/blob/master/LICENSE</PackageLicenseUrl>
    
    <Version>2.1.0</Version>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <FileVersion>2.1.0.0</FileVersion>
    
    <RepositoryUrl>https://github.com/akamsteeg/AtleX.CommandLineArguments.git</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <PackageTags>cli commandline command line arguments argument parser</PackageTags>
    <PackageReleaseNotes>
      2.1.0:
      - Enabled SourceLink for a better debugging experience (#40)
      - General code quality improvements (#41, #42)

      2.0.1:
      - Performance improvements (#39)

      2.0.0:
      - [Feature] Added support for GNU/Linux style "--name value" arguments (#19)
      - [Feature] Simplified extending the library with different parsers and help writers by introducing interfaces (#8, #11)
      - [Feature] Rewritten the configuration system. This makes it a lot more explicit by strong-typed configurations (e.g. WindowsStyleConfiguration) and now by default all built-in type parsers and validators are loaded to take that burden away from the user. Also, by default the new AutoDetectConfiguration is used that uses Windows-style arguments when running on Windows, and GNU/Linux style on Linux and Mac (#9)
      - [Fix] Reduce lenght of names of commonly used classes by removing the "CommandLineArguments" cruft from it. E.g. WindowsStyleCommandLineArgumentsParser is now WindowsStyleParser (#23)
      - [Fix] Remove not-needed package reference for System.ComponentModel.Annotations from the NETFX installation (#24)
      - [Fix] Removed redundant .NET 4.6 TFM from supported frameworks. We now support .NET 4.5 and NETSTANDARD 1.5 and those are upwards compatible with newer versions of their respective runtimes (#10)
      - [Feature] Performance improvements (#29, #30, #33, #34)

      1.1.1:
      -Many internal improvements (#7, #13, #14, #15, #16, #17)
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.ComponentModel.Annotations" Version="4.4.1" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
    <Reference Include="System.ComponentModel.DataAnnotations" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All"/>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="docs\**" />
    <EmbeddedResource Remove="docs\**" />
    <None Remove="docs\**" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

</Project>